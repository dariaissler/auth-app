{"version":3,"sources":["components/Login.js","components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["Login","login","isAuth","useState","username","password","userdata","setUserdata","to","Grid","Paper","elevation","style","padding","height","width","margin","align","Avatar","backgroundColor","onSubmit","e","preventDefault","TextField","value","onChange","target","label","name","fullWidth","required","type","FormControlLabel","control","Checkbox","color","Button","variant","Table","getUsers","data","onClick","rows","columns","field","headerName","App","setIsAuth","setData","a","fetch","headers","method","body","JSON","stringify","status","response","json","console","log","className","path","render","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.74c32de3.chunk.js","sourcesContent":["import {Grid, Paper, Avatar, TextField, Button} from '@material-ui/core';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {useState} from 'react';\nimport {Redirect} from 'react-router-dom';\n\n\nexport const Login = ({login, isAuth}) => {\n\n  const [userdata, setUserdata] = useState({username: \"\", password: \"\"});\n \n\n const paperStyle = {\n        padding: 20,\n        height: '40%',\n        width: 280,\n        margin: '50px auto'\n    }\n    const avatarStyle = {\nbackgroundColor: '#3f51b5'\n    }\n\nconst handlerSubmit = (e) => {\n  e.preventDefault();\n  login(userdata);\n}\n\nif (isAuth){\n  return <Redirect to={'/'}/> \n } \n\n    return (\n       <Grid>\n<Paper elevation={10} style={paperStyle}>\n    <Grid align='center'>\n    <Avatar style={avatarStyle}> <ExitToAppIcon/></Avatar>\n<h2>Log In</h2>\n\n    </Grid>\n    <form onSubmit={handlerSubmit}>\n<TextField value={userdata.username} onChange={e => setUserdata({...userdata, username: e.target.value})} label='Username' name='username' fullWidth required />\n<TextField value={userdata.password} onChange={e => setUserdata({...userdata, password: e.target.value})} label='Password' name='password' type='password' fullWidth required/>\n<FormControlLabel\n        control={\n          <Checkbox\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Remember me\"\n      />\n      <Button type='submit' color='primary' variant='contained' fullWidth>LOG IN</Button>\n      </form>\n</Paper>\n\n       </Grid>\n\n    )\n}\nexport default Login\n","import {Redirect} from 'react-router-dom';\nimport {Grid, Paper, Button} from '@material-ui/core';\nimport { DataGrid } from '@material-ui/data-grid';\n\n\nexport const Table = ({isAuth, getUsers, data}) => {\n \n\n    const paperStyle = {\n        padding: 20,\n        height: '40%',\n        width: 320,\n        margin: '50px auto'\n    }\n\n    if (!isAuth){\n        return <Redirect to={'/login'}/> \n    } \n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 70 },\n        { field: 'username', headerName: 'User Name', width: 130 },\n        { field: 'is_superuser' , headerName: 'Super user', width: 130 },\n      ];\n      \n    \n\n    return (\n        <Grid>\n            <Paper elevation={10} style={paperStyle}>\n            <Button onClick={getUsers} color='primary' variant='contained' fullWidth>Show two users I was only able to get</Button>\n            <div style={{ height: 400, width: '100%' }}>\n          <DataGrid rows={data} columns={columns}/>\n           </div>\n        </Paper>\n        </Grid>\n    )\n}\n\nexport default Table\n\n","import Login from './components/Login';\nimport {useState} from 'react';\nimport Table from './components/Table';\nimport {Route, Switch} from 'react-router-dom';\n\nfunction App () {\n  const [isAuth, setIsAuth] = useState(false);\n  const [data, setData] = useState([]);\n\n  const login =  async (userdata) => {\n     const response = await fetch('https://agile-garden-50413.herokuapp.com/api/token/login/', \n     {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-CSRFToken': '0Ne4uFIgSMdSksmdGnl6Sj1PY9PUzt2vgwEn1XiY7OVhPlaD7bhCfAVpOIhAjyl9',\n\n      },\n      method: \"POST\",\n      body: JSON.stringify(userdata)\n     })\n\n     if(response.status === 200){\n         setIsAuth(true);\n     }\n  }\n\n  const getUsers = async () => {\n    const response = await fetch('https://agile-garden-50413.herokuapp.com/api/users/',\n    {\n        headers: {\n            'accept': 'application/json',\n            'Authorization': 'Token 54f6846f093227d515ea9b333fef8d16faff957b',\n            'X-CSRFToken': '0Ne4uFIgSMdSksmdGnl6Sj1PY9PUzt2vgwEn1XiY7OVhPlaD7bhCfAVpOIhAjyl9',\n        }}\n    )\n    const data = await response.json()\n   setData(data);\n   console.log(data);\n}\n\n \n\n  return (\n   \n    <div className=\"App\">\n      <Switch>\n     <Route path='/login' render={(props) => <Login isAuth={isAuth} login={login}/> }/> \n     <Route path='/' render={(props) => <Table data={data} getUsers={getUsers} isAuth={isAuth}/>}/>\n      </Switch>\n      </div>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}